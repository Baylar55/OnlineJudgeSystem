@using AlgoCode.Application.Features.Submissions.Queries.GetAll
@model GetSubmissionsWithPaginationQueryResponse

<!-- ============================ Page Title Start================================== -->
<section class="page-title">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 col-md-12">
                <div class="breadcrumbs-wrap">
                    <h1 class="breadcrumb-title">All My Submissions</h1>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- ============================ Page Title End ================================== -->
<!-- ============================ Submissions ================================== -->

<div class="submissions-container container">
    <table class="table table-responsive table-bordered table-striped table-hover">
        <thead>
            <tr>
                <th>Time Submitted</th>
                <th>Question</th>
                <th>Status</th>
                <th>Runtime</th>
            </tr>
        </thead>
        <tbody>
            @for (var i = 0; i < Model.Submissions.Count; i++)
            {
                var submission = Model.Submissions.ToList()[i];
                var problemTitle = Model.ProblemTitles.ElementAtOrDefault(i);

                <tr>
                    <td>@(submission.Created != null ? submission.Created.ToString("MM/dd/yyyy hh:mm tt") : "N/A")</td>
                    <td>@problemTitle</td>
                    <td>
                        <a asp-action="details" asp-controller="submissions" asp-route-id="@submission.Id">
                            @submission.Status
                        </a>
                    </td>
                    <td>@submission.ExecutionTime ms</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<nav aria-label="Page navigation example" class="mb-3">
    <ul class="pagination">
        @{
            if (Model is not null)
            {
                <li class="page-item">
                    @{
                        var prevPage = Model.PageNumber - 1;
                        <a class="page-link" itemprop="url" asp-action="index" asp-controller="submissions" asp-route-page="@prevPage">
                            <i class="fa-solid fa-chevron-left"></i>
                        </a>
                    }
                </li>
                @for (int i = 1; i <= Model.PageCount; i++)
                {
                    <li class="page-item">
                        <a asp-action="index" asp-controller="submissions" asp-route-page="@i" class="@(Model.PageNumber==i ? "mkdf-pag-active disabled page-link" : "mkdf-pag-inactive page-link")">@i</a>
                    </li>
                }
                @if (Model.PageCount != Model.PageNumber)
                {
                    <li class="page-item">
                        @{
                            var nextPage = @Model.PageNumber + 1;
                            <a class="page-link" itemprop="url" asp-action="index" asp-controller="submissions" asp-route-page="@nextPage">
                                <i class="fa-solid fa-chevron-right"></i>
                            </a>
                        }
                    </li>
                }
            }
        }
    </ul>
</nav>
<!-- ============================ Submissions ================================== -->