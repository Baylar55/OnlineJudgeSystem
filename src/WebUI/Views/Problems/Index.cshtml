@using AlgoCode.Application.DTOs.Problems
@model ProblemsIndexDTO

@{
    var difficultyRoute = Context.Request.Query["difficulty-filter"];
    var nameRoute = Context.Request.Query["Name"];
}

<div class="container mt-2" style="width: 1200px !important;">
    <div class="row">
        <div class="col-9">
            <div class="study-plan-container mt-2">
                <div class="row">
                    <div class="col-lg-4 col-md-6 col-sm-6">
                        <div class="card mb-3 study-plan-card" style="max-width: 540px;">
                            <div class="row g-0">
                                <div class="col-md-4 d-flex justify-content-center align-items-center">
                                    <img src="~/assets/img/top-int.png" class="img-fluid rounded-2">
                                </div>
                                <div class="col-md-8 d-flex flex-sm-wrap align-items-center">
                                    <div class="card-body">
                                        <p class="card-title">Top Interview 150</p>
                                        <p class="card-text">Must-do for Interview Prep</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-6 col-sm-6">
                        <div class="card mb-3 study-plan-card" style="max-width: 540px;">
                            <div class="row g-0">
                                <div class="col-md-4 d-flex justify-content-center align-items-center">
                                    <img src="~/assets/img/algocode-75.png" class="img-fluid rounded-2">
                                </div>
                                <div class="col-md-8 d-flex flex-sm-wrap align-items-center">
                                    <div class="card-body">
                                        <p class="card-title">AlgoCode 75</p>
                                        <p class="card-text">Ace Coding Interview</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-6 col-sm-6">
                        <div class="card mb-3 study-plan-card" style="max-width: 540px;">
                            <div class="row g-0">
                                <div class="col-md-4 d-flex justify-content-center align-items-center">
                                    <img src="~/assets/img/js-30.png" class="img-fluid rounded-2">
                                </div>
                                <div class="col-md-8 d-flex flex-sm-wrap align-items-center">
                                    <div class="card-body">
                                        <p class="card-title">30 Days of JavaScript</p>
                                        <p class="card-text">Learn JS Basics with 30 Qs</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-4 col-md-6 col-sm-6">
                        <div class="card mb-3 study-plan-card" style="max-width: 540px;">
                            <div class="row g-0">
                                <div class="col-md-4 d-flex justify-content-center align-items-center">
                                    <img src="~/assets/img/top-int.png" class="img-fluid rounded-2">
                                </div>
                                <div class="col-md-8 d-flex flex-sm-wrap align-items-center">
                                    <div class="card-body">
                                        <p class="card-title">Top Interview 150</p>
                                        <p class="card-text">Must-do for Interview Prep</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-6 col-sm-6">
                        <div class="card mb-3 study-plan-card" style="max-width: 540px;">
                            <div class="row g-0">
                                <div class="col-md-4 d-flex justify-content-center align-items-center">
                                    <img src="~/assets/img/algocode-75.png" class="img-fluid rounded-2">
                                </div>
                                <div class="col-md-8 d-flex flex-sm-wrap align-items-center">
                                    <div class="card-body">
                                        <p class="card-title">AlgoCode 75</p>
                                        <p class="card-text">Ace Coding Interview</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4 col-md-6 col-sm-6">
                        <div class="card mb-3 study-plan-card" style="max-width: 540px;">
                            <div class="row g-0">
                                <div class="col-md-4 d-flex justify-content-center align-items-center">
                                    <img src="~/assets/img/js-30.png" class="img-fluid rounded-2">
                                </div>
                                <div class="col-md-8 d-flex flex-sm-wrap align-items-center">
                                    <div class="card-body">
                                        <p class="card-title">30 Days of JavaScript</p>
                                        <p class="card-text">Learn JS Basics with 30 Qs</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @* <form method="get" asp-action="index" asp-controller="problems"> *@
            <div class="horizontal-filter">
                <div class="row">
                    <div class="btn-group-sm col-5 d-flex dropdown" style="margin-right:15px;">

                        <button type="button" class="btn btn-md btn-secondary dropdown-toggle"
                                data-bs-toggle="dropdown" aria-expanded="false">
                            Difficulty
                        </button>
                        <ul class="dropdown-menu">
                            @foreach (var value in Enum.GetValues(typeof(ProblemDifficulty)))
                            {
                                @if (difficultyRoute == value)
                                {
                                    <li>
                                        <a class="dropdown-item">
                                            <div class="form-check">
                                                <input class="form-check-input" checked type="checkbox" value="@value" name="difficulty-filter" id="difficulty-@value" />
                                                <label class="form-check-label" for="difficulty-@value" data-id="@value">@value</label>
                                            </div>
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li>
                                        <a class="dropdown-item">
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" value="@value" name="difficulty-filter" id="difficulty-@value" />
                                                <label class="form-check-label" for="difficulty-@value" data-id="@value">@value</label>
                                            </div>
                                        </a>
                                    </li>
                                }
                            }
                        </ul>
                        <button type="button" class="btn btn-md btn-secondary dropdown-toggle"
                                data-bs-toggle="dropdown" aria-expanded="false">
                            Status
                        </button>
                        <ul class="dropdown-menu">
                            @foreach (var value in Enum.GetValues(typeof(ProblemStatus)))
                            {
                                <li>
                                    <a class="dropdown-item">
                                        <div class="form-check">
                                            <input class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault1">
                                            <label class="form-check-label" for="flexRadioDefault1">
                                                Default radio
                                            </label>
                                        </div>
                                    </a>
                                </li>
                            }
                        </ul>
                        <button type="button" class="btn btn-md btn-secondary dropdown-toggle"
                                data-bs-toggle="dropdown" aria-expanded="false">
                            Tags
                        </button>
                        <ul class="dropdown-menu">
                            @foreach (var tag in Model.GetAllTagsQueryResponse.Tags)
                            {
                                <li>
                                    <a class="dropdown-item">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" value="" id="Checkme1" />
                                            <label class="form-check-label" for="Checkme1">@tag.Title</label>
                                        </div>
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                    <div class="col-4">
                        <div class="input-group-sm d-flex">
                            <input id="searchInput" type="search" class="form-control" placeholder="Search for questions">
                            <div class="input-group-append">
                                <button id="searchButton" class="btn btn-sm btn-secondary border border-top-0 border-left-0 rounded-0" type="button">
                                    <i class="fa fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="col-2 d-flex align-items-center justify-content-center btn shuffle-container">
                        <div class="shuffle d-flex">
                            <img src="assets/img/shuffle_icon.png" alt="">
                            <span>Select Random</span>
                        </div>
                    </div>
                </div>
            </div>
            @* </form> *@
            <div class="problem-list">
                <table class="table table-striped table-responsive table-borderless">
                    <thead>
                        <tr>
                            <th>Status</th>
                            <th>Title</th>
                            <th>Solution</th>
                            <th>Acceptance</th>
                            <th>Difficulty</th>
                        </tr>
                    </thead>
                    <tbody class="problem-list-body">
                        @foreach (var problem in Model.GetProblemsWithPaginationQueryResponse.Problems)
                        {
                            <tr>
                                <td><i class="fa-regular fa-circle-check"></i></td>
                                <td>
                                    <a asp-action="singleproblem" asp-controller="problems" asp-route-id="@problem.Id">@problem.Id.  @problem.Title</a>
                                    @if (problem.AccessLevel == AccessLevel.Premium)
                                    {
                                        <span class="badge" style="color:white !important;background-color:#ffa116;">Premium</span>
                                    }
                                </td>
                                <td><i class="fa-solid fa-file-circle-check"></i></td>
                                <td>40.3%</td>
                                <td class="status-@(problem.Difficulty.ToString().ToLower())">@problem.Difficulty</td>

                            </tr>
                        }
                    </tbody>
                </table>
                <div class="pagination-container">
                    <nav aria-label="Page navigation example">
                        <ul class="pagination">
                            @{
                                if (Model is not null)
                                {
                                    <li class="page-item">
                                        @{
                                            var prevPage = Model.GetProblemsWithPaginationQueryResponse.PageNumber - 1;
                                            <a class="page-link" itemprop="url" asp-action="index" asp-controller="problems" asp-route-page="@prevPage">
                                                <i class="fa-solid fa-chevron-left"></i>
                                            </a>
                                        }
                                    </li>
                                    @for (int i = 1; i <= Model.GetProblemsWithPaginationQueryResponse.PageCount; i++)
                                    {
                                        <li class="page-item">
                                            <a asp-action="index" asp-controller="problems" asp-route-page="@i" class="@(Model.GetProblemsWithPaginationQueryResponse.PageNumber==i ? "mkdf-pag-active disabled page-link" : "mkdf-pag-inactive page-link")">@i</a>
                                        </li>
                                    }
                                    @if (Model.GetProblemsWithPaginationQueryResponse.PageCount != Model.GetProblemsWithPaginationQueryResponse.PageNumber)
                                    {
                                        <li class="page-item">
                                            @{
                                                var nextPage = @Model.GetProblemsWithPaginationQueryResponse.PageNumber + 1;
                                                <a class="page-link" itemprop="url" asp-action="index" asp-controller="problems" asp-route-page="@nextPage">
                                                    <i class="fa-solid fa-chevron-right"></i>
                                                </a>
                                            }
                                        </li>
                                    }
                                }
                            }
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
        <div class="col-3 mt-2">
            <div class="calendar">
                <!-- CALENDAR HEADER START -->
                <div class="calendar-header">
                    <span class="month-picker" id="month-picker">
                        February
                    </span>
                    <div class="year-picker">
                        <span class="year-change mt-3" id="prev-year">
                            <pre> < </pre>
                        </span>
                        <span id="year">2023</span>
                        <span class="year-change mt-3" id="next-year">
                            <pre> > </pre>
                        </span>
                    </div>
                </div>

                <!-- CALENDAR BODY START -->
                <div class="calendar-body">
                    <div class="calendar-week-day">
                        <div>S</div>
                        <div>M</div>
                        <div>T</div>
                        <div>W</div>
                        <div>T</div>
                        <div>F</div>
                        <div>S</div>
                    </div>
                    <div class="calendar-day"></div>
                </div>

                <!-- CALENDAR FOOTER START -->
                <!-- <div class="calendar-footer">
                    <div class="toggle">
                        <span>Dark Mode</span>
                        <div class="dark-mode-switch">
                            <div class="dark-mode-switch-ident"></div>
                        </div>
                    </div>
                </div> -->
                <div class="month-list"></div>
            </div>
            <div class="user-session mt-5">
                <div class="row mb-3">
                    <div class="col-6 d-flex align-items-center">
                        <div class="session-header">Session</div>
                    </div>
                    <div class="col-6">
                        <div class="d-flex justify-content-end btn">
                            <div class="session-name">@Model.GetSessionDetailsByIdQueryResponse.Title<i class="fa-solid fa-gear"></i></div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-5">
                        <div class="circle">
                            <h3>@Model.GetSessionDetailsByIdQueryResponse.SolvedProblemsCount</h3>
                            <hr>
                            <span>@Model.GetSessionDetailsByIdQueryResponse.AllProblemsCount</span>
                        </div>
                    </div>
                    <div class="col-7 dataDifficulty">
                        <div class="difficulty-easy d-flex justify-content-between">
                            <div>
                                <p class="d-inline status-easy">Easy</p>
                            </div>
                            <div>
                                <span>@Model.GetSessionDetailsByIdQueryResponse.SolvedEasyProblemsCount</span>
                                <span>/@Model.GetSessionDetailsByIdQueryResponse.AllEasyProblemsCount</span>
                            </div>
                        </div>
                        <div class="difficulty-medium d-flex justify-content-between">
                            <div>
                                <p class="d-inline status-medium">Medium</p>
                            </div>
                            <div>
                                <span>@Model.GetSessionDetailsByIdQueryResponse.SolvedMediumProblemsCount</span>
                                <span>/@Model.GetSessionDetailsByIdQueryResponse.AllMediumProblemsCount</span>
                            </div>
                        </div>
                        <div class="difficulty-hard d-flex justify-content-between">
                            <div>
                                <p class="d-inline status-hard">Hard</p>
                            </div>
                            <div>
                                <span>@Model.GetSessionDetailsByIdQueryResponse.SolvedHardProblemsCount</span>
                                <span>/@Model.GetSessionDetailsByIdQueryResponse.AllHardProblemsCount</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/assets/js/jquery.min.js"></script>
<script>

    $(document).ready(function () {
        $('#searchButton').click(function () {
            var searchValue = $('#searchInput').val();
            $.ajax({
                url: '/problems/search',
                type: 'POST',
                data: { title: searchValue },
                success: function (response) {

                    $('.problem-list-body').empty();
                    console.log(response.problems);
                    response.problems.forEach(function (problem) {
                        var difficultyNames = ['Easy', 'Medium', 'Hard'];
                        var difficultyName = difficultyNames[problem.difficulty];
                            var badge = problem.IsPremium ? '<span class="badge" style="color:white !important;background-color:#ffa116;">Premium</span>' : '';

                        var body = document.createElement('tr');
                        body.innerHTML = `<tr>
                                        <td><i class="fa-regular fa-circle-check"></i></td>
                                        <td>
                                            <a asp-action="singleproblem" asp-controller="problems" asp-route-id="${problem.id}">${problem.id}.  ${problem.title}</a>
                                        ${badge}
                                        </td>
                                        <td><i class="fa-solid fa-file-circle-check"></i></td>
                                        <td>40.3%</td>
                                                <td class="status-${difficultyName ? difficultyName.toLowerCase() : ''}">${difficultyName}</td>
                                    </tr>`;

                        $('.problem-list-body').append(body);
                    });
                },
                error: function (error) {
                    console.error('Error:', error);
                }
            });
        });
    });
</script>
